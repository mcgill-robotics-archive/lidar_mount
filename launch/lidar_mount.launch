<launch>
  <!-- TF broadcasters. -->
  <node pkg="lidar_mount" type="tf_broadcaster.py" 
        name="lidar_broadcaster" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="axel_broadcaster" args="0 0 0.02 0 0 0 base_link axel" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="beam_broadcaster" args="0 0 0.1 0 0 0 lidar_mount laser" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="world_broadcaster" args="0 0 0 0 0 0 world base_link" />

  <!-- Rosserial. -->
  <node pkg="rosserial_python" type="serial_node.py" name="lidar_mount">
    <param name="_port" type="string" value="/dev/redBoard" />
    <param name="_baud" type="int" value="57600" />
  </node>

  <!-- Scanning state node. -->
  <node pkg="lidar_mount" type="laser_scanner.py" name="laser_scanner"></node>

  <!-- Lidar aquisition. -->
  <node pkg="urg_node" type="urg_node" name="urg_node">
    <param name="port" type="string" value="/dev/lidar" />
    <param name="intensity" type="bool" value="true" />
  </node>

  <!-- Laser assembler. -->
  <node type="laser_scan_assembler" pkg="laser_assembler" name="assembler">
    <param name="max_scans" type="int" value="100" />
    <param name="fixed_frame" type="string" value="base_link" />
  </node>
</launch>
