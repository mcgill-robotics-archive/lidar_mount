<launch>
  <!-- Define arguments. -->
  <arg name="bag_playback" default="false" />
  <arg name="viz" default="false" />

  <!-- Nodes required for running the physical implementation. -->
  <group unless="$(arg bag_playback)">
    <!-- Rosserial. -->
    <node pkg="rosserial_python" type="serial_node.py" name="lidar_mount">
      <param name="_port" type="string" value="/dev/redBoard" />
      <param name="_baud" type="int" value="57600" />
    </node>

    <!-- Lidar aquisition. -->
    <node pkg="urg_node" type="urg_node" name="urg_node">
      <param name="port" type="string" value="/dev/lidar" />
      <param name="intensity" type="bool" value="true" />
    </node>

    <!-- Laser assembler. -->
    <node type="laser_scan_assembler" pkg="laser_assembler" name="assembler">
      <param name="max_scans" type="int" value="100" />
      <param name="fixed_frame" type="string" value="base_link" />
    </node>

    <!-- Laser requester and PC publisher module. -->
    <node pkg="lidar_mount" type="request_pointcloud.py" name="pc_requester" />

    <!-- TF broadcaster. -->
    <node pkg="lidar_mount" type="tf_broadcaster.py" 
          name="lidar_broadcaster" />
  </group>

  <!-- Static frame between base_link and world for testing purposes. -->
  <group if="$(arg bag_playback)">
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="world_broadcaster" args="0 0 0 0 0 0 world
        map" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="world_broadcaster" args="0 0 0 0 0 0 map
        odom" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="world_broadcaster" args="0 0 0 0 0 0 odom
        base_link" />
  </group>
  
  <!-- Static TFs required for both regular opperation and for bag playback. -->
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="base_broadcaster" args="0 0 0 0 0 0 base_link
        lidar_mount/base" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="axel_broadcaster" args="0 0 0.02 0 0 0 lidar_mount/base 
        lidar_mount/axel" />
  <node pkg="tf2_ros" type="static_transform_publisher"
        name="beam_broadcaster" args="0 0 0.1 0 0 0 lidar_mount/platform
        lidar_mount/laser" />

  <!-- RVIZ. -->
  <group if="$(arg viz)">
    <node pkg="rviz" type="rviz" name="lidar_viz"
        args="-d $(find lidar_mount)/lidar.rviz" />
  </group>

</launch>
